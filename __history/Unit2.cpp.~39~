//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit2.h"
#include "Unit3.h"
#include "Unit4.h"
#include <windows.h>
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm2 *Form2;
//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
enum chessTile
{
	a = 1,b,c,d,e,f,g,h
};

const char* filename = "DefaultPosition.txt";

Tile tiles[64];
char** positions;
char str[200];
int size = 0;
TColor hint = (TColor)RGB(38,38,38);

int rever = 0;
int countclick = 0;
int tile1, tile2;
int turn;
int whiteKing = 32;
int blackKing = 39;

void __fastcall TForm2::FormActivate(TObject *Sender)
{
	positions = (char**)malloc(300 * sizeof(char*));
	for (int i = 0; i < 300; i++)
		positions[i] = (char*)malloc(200 * sizeof(char));
	FILE* fp = fopen(filename, "r");
	if (fp)
	{
		fgets(str, 200, fp);
	}
	else
	{
		ShowMessage("Can't load the position from file \"" + (AnsiString)filename + "\"");
	}
	fclose(fp);
	Helper::LoadPosition(str, tiles, &turn, Form2->Image1, &whiteKing, &blackKing);
}
//---------------------------------------------------------------------------
void __fastcall TForm2::Button1Click(TObject *Sender)
{
	Helper::ReverseField(tiles, Form2->Image1);
	rever = 1 - rever;
}


void __fastcall TForm2::Image1MouseDown(TObject *Sender, TMouseButton Button, TShiftState Shift,
		  int X, int Y)
{
	if (rever == 1)
	{
		Helper::ReverseField(tiles, Form2->Image1);
        rever = 0;
    }
	Helper::Turn(tiles, X, Y, &turn, Form2->Image1, &whiteKing, &blackKing, positions, &size);
	int x = Helper::Game(tiles, turn, &whiteKing, &blackKing);
	switch (x)
	{
		case 1:
		{
			///play sound
			break;
		}
		case 2:
		{
			ShowMessage("Mate");
			Form4->ShowModal();
            Form2->Close();
		}
		default: break;
	}
}
//---------------------------------------------------------------------------



